<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sMonster</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_number(object_index) = 1
    name_color = make_colour_hsv(random(255),255 - random(100),255 - random(100))
else
{
    name_color = color_get_hue(oBattleMonster.name_color) + 255 * instance_number(object_index) / 9
    if name_color &gt; 255
        name_color -= 255
    name_color = make_colour_hsv(name_color,255 - random(100),255 - random(100))
}
name = "???"
base_spd = 1
spd_mod = 0
spd_mod_percent = 1
str = 5
dex = 5
pow = 5
atk = 5
base_def = 0
base_res = 0
base_aegis = 0
def_mod = 0
def_mod_percent = 1
max_stam = 15
stam = max_stam
endurance = 0
max_hp = 100
hp = max_hp
drawn_hp = 0
drawn_stam = 0
target_que = ds_queue_create()
target = noone
f_target = noone
team = 0
frighten_level = 0
x = round(x)
y = round(y)
xstart = x
ystart = y
selected_move = 0
num_moves = 4
for(var i = 0; i &lt; 5; i++)
{
cd[i] = 0
moves[i] = irandom(37)
move_uses[i] = 0
}
moves[4] = m_slap
//target type 0 = enemy 1 = ally 2 = self 3 = all enemies
///buff_list = ds_map_create() add later yo dawg
image_speed = 0
outline_color = c_blue
action_state = 0 // 0 = choose ability 1 = target
draw_stats = 0
press_cycle = 0
area = 0
ability_lock = 0
bleed_level = 0
weakness_level = 0
dodge_timer = 0
hex_level = 0
poisoned = 0
tag=""
attack_streak = 0
deflect_percent = 0
target_lock = noone
target_lock_level = 0 // 0 no lock 1 can target self and target_lock
untargetable = 0
damage_bond = noone
disease_level = 0
buffs = ds_map_create()
sleep_level = 0
resistances = ds_map_create()
tags = noone
has_selected_move = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(var i = 0; i &lt; 4; i++)
    if cd[i] &gt; 0
        cd[i] --

x = xstart
y = ystart
attack_streak++
if target &lt; 1000 or !instance_exists(target) or target.object_index != oBattleMonster
    target = id
if script_execute(moves[selected_move],m_TTYPE)!=4
    ds_list_insert(oBattleController.combat_log,0,"[c="+string(name_color)+"]"+name+"[/c]" + " uses " + string(script_execute(moves[selected_move],m_NAME)) +" on [c="+string(target.name_color)+"]" + target.name+"[/c]" )
else
    ds_list_insert(oBattleController.combat_log,0,"[c="+string(name_color)+"]"+name+"[/c]" + " uses " + string(script_execute(moves[selected_move],m_NAME)) )
move_uses[selected_move]++
script_execute(moves[selected_move])
show_debug_message("Me: " + string(id)+"Move: " + string(selected_move)+" target: "+string(target) + " team: " + string(team) )
/*
target.hp -= atk
var d_txt = instance_create(target.x + 100, target.y + 100,oDamageText);
d_txt.txt = atk
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if x != xstart or y != ystart
{
    if point_distance(x,y,xstart,ystart) &gt; 8
        move_towards_point(xstart,ystart,8)
    else{
        x = xstart
        y = ystart
        speed = 0
    }
}

var min_bar_spd = .5
if hp &lt;= 0
{
    min_bar_spd = abs(drawn_hp)/(room_speed/2)
    if min_bar_spd &lt; 1
        min_bar_spd = 1
    hp = 0
}
if abs(drawn_hp - hp) &lt; min_bar_spd
    drawn_hp = hp
else
{
    var hp_spd = abs(drawn_hp - hp)/room_speed
    if hp_spd &lt; min_bar_spd
        hp_spd = min_bar_spd
    if drawn_hp &lt; hp
        drawn_hp+= hp_spd
    else if drawn_hp &gt; hp
        drawn_hp-= hp_spd
}
if abs(drawn_hp - hp) &lt; min_bar_spd
{
    drawn_hp = hp
    if hp &lt;= 0 
    {
        instance_destroy()
        ds_list_insert(oBattleController.combat_log,0,"[c="+string(name_color)+"]"+name + " has died." )
    }
}
if abs(drawn_stam - stam) &lt; min_bar_spd
    drawn_stam = stam
else
{
    var stam_spd = abs(drawn_stam - stam)/room_speed
    if stam_spd &lt; min_bar_spd
        stam_spd = min_bar_spd
    if drawn_stam &lt; stam
        drawn_stam+= stam_spd
    else if drawn_stam &gt; stam
        drawn_stam-= stam_spd
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>press_cycle = 0
/*oBattleController.selected_monster = noone
depth = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
/*if oBattleController.state = 1 and oBattleController.selected_monster != noone and oBattleController.selected_monster != id
        oBattleController.selected_monster.target = id
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///select target
press_cycle = 1
if press_cycle = 1 and instance_exists(oBattleController.selected_monster)
{
var istargetable = true;
    with(oBattleController.selected_monster)
        istargetable = is_targetable(other.id)
with(oBattleController)
{
    if istargetable
    {
    if state = 1 and selected_monster.action_state = 1
    {
        //if ds_exists(selected_monster.target_que,ds_type_queue)
        //   ds_queue_destroy(selected_monster.target_que)
        //selected_monster.target_que = ds_queue_create()
        if !ds_exists(selected_monster.target_que,ds_type_queue)
                selected_monster.target_que = ds_queue_create()  
        ds_queue_enqueue(selected_monster.target_que,other.id)
        selected_monster.target = other.id
        var ttype = script_execute(selected_monster.moves[selected_monster.selected_move],m_TTYPE);
        if 1//ttype &lt;= 4
        {
            
            if ds_queue_size(selected_monster.target_que) &gt;= ttype - 3
            {
            selected_monster.action_state = 0
            selected_monster.has_selected_move = 1
            var o_selected_monster = selected_monster;
            for(var i = 0; i &lt; 4; i++)
                if instance_exists(team_1[i % 2,i div 2]) and team_1[i % 2,i div 2].has_selected_move = 0 and !team_1[i % 2,i div 2].ability_lock and team_1[i % 2,i div 2].sleep_level &lt; 1
                {
                    selected_monster = team_1[(i) % 2,(i) div 2]
                    break;
                }
            if selected_monster = o_selected_monster
                {
                    if instance_exists(oClient)
                    {
                        stage = 3
                        with(oClient)
                            SendTurn()
                    }
                    else
                        event_user(1)
                }
                }
        }
        /*else
        {
            if !ds_exists(selected_monster.target_que,ds_type_queue)
                selected_monster.target_que = ds_queue_create() 
            ds_queue_enqueue(selected_monster.target_que,other.id)
            if ds_queue_size(selected_monster.target_que) &gt;= ttype - 3
            {
                selected_monster.action_state = 0
                var o_selected_monster = selected_monster;
                for(var i = 0; i &lt; 3; i++)
                    if selected_monster = team_1[i % 2,i div 2] and instance_exists(team_1[(i + 1) % 2,(i + 1) div 2]) and !team_1[(i + 1) % 2,(i + 1) div 2].ability_lock
                    {
                        selected_monster = team_1[(i + 1) % 2,(i + 1) div 2]
                        break;
                    }
                if selected_monster = o_selected_monster
                {
                    if instance_exists(oClient)
                    {
                        stage = 3
                        with(oClient)
                            SendTurn()
                    }
                    else
                        event_user(1)
                }
            }
                
        }*/
         }   
    }
}

}
/*if player_controlled and oBattleController.state = 1
{
    oBattleController.selected_monster = id
    oBattleController.action_monster = id
    depth = - 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///take damage
dmg = floor(dmg * (9 - 8 * (50-global.level)/50))
if sleep_level &gt;= 1
sleep_level = 0
var crit = false;
if !ds_exists(tags,ds_type_list)
        tags = ds_list_create()
if (area != 0 or dodge_timer &gt; 0) //or tag = "poison"
   dmg = 0
else
{
    if sleep_level &gt;= 1
        sleep_level = 0
    var active_def = 0;
    if  - 1 != ds_list_find_index(tags,"str")
        active_def = def;
    else if - 1 != ds_list_find_index(tags,"dex")
        active_def = res;
    else if - 1 != ds_list_find_index(tags,"pow")
        active_def = aegis;
    if active_def &lt; 1
        active_def = 1
    dmg = dmg/active_def + 1
    dmg *= 1 + weakness_level
    if ds_exists(resistances,ds_type_map)
        for(var i = 0; i &lt; ds_list_size(tags);i++;)
            if ds_map_exists(resistances,ds_list_find_value(tags,i))
                dmg *= ds_map_find_value(resistances,ds_list_find_value(tags,i))
    dmg *= 1 + random(.2) - .1 
    if random(20) &gt; 19
    {
        dmg *= 1.6
        crit = true
    }
    dmg = floor(dmg)
    if dmg &lt;= 0 
        dmg = 1
    hp -= dmg
    if deflect_percent &gt; 0 and ds_list_find_index(tags,"poison") = -1 and ds_list_find_index(tags,"disease") = -1 and ds_list_find_index(tags,"deflect") = -1
        with(other)
        {
            tags = ds_list_create()
            ds_list_add(tags,"deflect")
            dmg = ceil(deflect_percent * other.dmg)
            event_user(0)
        }
    
}
var d_txt = instance_create(x + 100, y + 100,oDamageText);
d_txt.txt = dmg
d_txt.image_blend = c_red
d_txt.sprite_index = sBloodSplatter
d_txt.image_speed = 0
if !crit
    ds_list_insert(oBattleController.combat_log,0,"[c="+string(name_color)+"]"+name+"[/c]" + " takes " + string(dmg) + " damage." )
else
    ds_list_insert(oBattleController.combat_log,0,"[c="+string(name_color)+"]"+name+"[/c]" + " takes [c=rainbow]" + string(dmg) + " damage, CRITICAL HIT![/c]" )
if instance_exists(damage_bond) and damage_bond.id != id and -1 = ds_list_find_index(tags,"damage_bond")
    with(damage_bond)
    {
        tags = ds_list_create()
        ds_list_add(tags,"damage_bond")
        dmg = other.dmg
        event_user(0)
    }
ds_list_destroy(tags)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if oBattleController.stage = 1 and instance_exists(oBattleController.selected_monster)
{
    var istargetable = true;
    with(oBattleController.selected_monster)
        istargetable = is_targetable(other.id)
        if istargetable
        {
        
        image_alpha = 1
            image_blend = c_white
        }
        else
        {
            image_alpha = .3
            image_blend = c_gray
        }
}
else
{
    image_alpha = 1
    image_blend = c_white}
if alarm[0] &gt; 0
{
    x  = xstart + random(10) - 5
    y  = ystart + random(10) - 5
}
outline_color = c_navy;
var outline_width = 7.5;
if oBattleController.action_monster = id or oBattleController.selected_monster = id
{
    //if oBattleController.selected_monster = id
        //draw_line_width_colour(x + 100,y + 100,mouse_x,mouse_y,12,c_aqua,c_blue)
    //outline_width *= 2.25
    outline_color = c_aqua
}
else if collision_point(mouse_x,mouse_y,id,false,0)
{
    //outline_width *= 1.5
    outline_color = c_blue
}


draw_roundrect_colour(x - outline_width, y - outline_width,bbox_right + outline_width,bbox_bottom + outline_width,outline_color,outline_color,0)
if team = 1
    draw_self()
else
    draw_sprite_ext(sprite_index,image_index,x + sprite_width,y,-image_xscale,image_yscale,image_angle,image_blend,image_alpha)
//stats
//hp
draw_text_colour(x+100,y+20,name,name_color,name_color,name_color,name_color,1)
draw_healthbar(x,y + 200 - 10,x + 200 /*- 17*/,y + 200 - 2,drawn_hp/max_hp * 100,c_red,c_red,c_red,0,0,1)
draw_healthbar(x,y + 200 - 14,x + 200 /*- 17*/,y + 200 - 10 - 2,drawn_stam/max_stam * 100,c_yellow,c_yellow,c_yellow,0,0,1)

//draw status effects
var i = 0;
if buffs[? "immune"] &gt;= 1
{
    draw_sprite(sStatusEffectIcon,8,x + i * 20,y + 200 - 34)
    i++
}
if buffs[? "bleed"] &gt;= 1
{
    draw_sprite(sStatusEffectIcon,0,x + i * 20,y + 200 - 34)
    i++
}
if buffs[? "poison"] &gt;= 1
{
    draw_sprite(sStatusEffectIcon,1,x + i * 20,y + 200 - 34)
    i++
}
if buffs[? "disease"] &gt;= 1
{
    draw_sprite(sStatusEffectIcon,2,x + i * 20,y + 200 - 34)
    i++
}
if buffs[? "sleep"] &gt;= 1
{
    draw_sprite(sStatusEffectIcon,3,x + i * 20,y + 200 - 34)
    i++
}
if buffs[? "curse"] &gt;= 1
{
    draw_sprite(sStatusEffectIcon,4,x + i * 20,y + 200 - 34)
    i++
}
if buffs[? "fear"] &gt;= 1
{
    draw_sprite(sStatusEffectIcon,5,x + i * 20,y + 200 - 34)
    i++
}
if buffs[? "weakness"] &gt;= 1
{
    draw_sprite(sStatusEffectIcon,6,x + i * 20,y + 200 - 34)
    i++
}
if  instance_exists(damage_bond)
{
    draw_sprite_ext(sStatusEffectIcon,7,x + i * 20,y + 200 - 34,1,1,0,damage_bond.name_color,1)
    i++
}
if draw_stats
{
    draw_set_font(fSuperTest)
    var stat_spacing = 15;
    var xx = x;
    if team = 2
        xx += sprite_width
    var i = 0;
    draw_text_color(xx,y + i * stat_spacing,string(round(drawn_hp))+"/"+string(max_hp),c_red,c_red,c_red,c_red,1)
    i++
    draw_text_color(xx,y + i * stat_spacing,string(round(drawn_stam))+"/"+string(max_stam),c_yellow,c_yellow,c_yellow,c_yellow,1)
    i++
    draw_text_color(xx,y + i * stat_spacing,string(def) + " def",c_gray,c_gray,c_gray,c_gray,1)
    i++
    draw_text_color(xx,y + i * stat_spacing,string(res) + " res",c_gray,c_gray,c_gray,c_gray,1)
    i++
    draw_text_color(xx,y + i * stat_spacing,string(aegis) + " aegis",c_gray,c_gray,c_gray,c_gray,1)
    i++
    draw_text_color(xx,y + i * stat_spacing,string(str) + " str",c_maroon,c_maroon,c_maroon,c_maroon,1)
    i++
    draw_text_color(xx,y + i * stat_spacing,string(dex) + " dex",c_maroon,c_maroon,c_maroon,c_maroon,1)
    i++
    draw_text_color(xx,y + i * stat_spacing,string(pow) + " pow",c_maroon,c_maroon,c_maroon,c_maroon,1)
    i++
    draw_text_color(xx,y + i * stat_spacing,string(spd) + " spd",c_orange,c_orange,c_orange,c_orange,1)
    i++
    draw_set_font(fTest)
}
/*if instance_exists(target) //and instance_exists(f_target) //fix to allow specific scenerios
{
    var target_color = target.outline_color
    var o_color = c_black
    if moves[selected_move,2] = 2
        target_color = outline_color
    draw_rectangle_colour(x + 200 - 16,y + 200 - 15,x + 200 - 1,y + 200 - 1,target_color,target_color,target_color,target_color,0)
    draw_rectangle_colour(x + 200 - 16,y + 200 - 15,x + 200 - 1,y + 200 - 1,o_color,o_color,o_color,o_color,1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_stats = abs(-- draw_stats)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
