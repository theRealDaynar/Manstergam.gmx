<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if tile_map[# floor(bbox_left/64),floor(bbox_top/64)] = 1 or tile_map[# floor(bbox_right/64),floor(bbox_top/64)] = 1 or tile_map[# floor(bbox_left/64),floor(bbox_bottom/64)] = 1 or tile_map[# floor(bbox_right/64),floor(bbox_bottom/64)] = 1
{
    var xx = x
    var true_xx = xx
    var yy = y
    if x &gt; xprevious
    {
        y = yprevious
        if tile_map[# floor(bbox_right/64),floor(bbox_top/64)] = 1 or tile_map[# floor(bbox_right/64),floor(bbox_bottom/64)] = 1
        {
            x = (x &amp;$ffffffc0) + 32;
            xx = x
        }
        y = yy
    }
    else if x &lt; xprevious
    {
        y = yprevious
        if tile_map[# floor(bbox_left/64),floor(bbox_top/64)] = 1 or tile_map[# floor(bbox_left/64),floor(bbox_bottom/64)] = 1
        {
            x = (x &amp;$ffffffc0) + 32;
            xx = x
        }
        y = yy
    }
    if y &gt; yprevious
    {
        x = xprevious
        if tile_map[# floor(bbox_right/64),floor(bbox_bottom/64)] = 1 or tile_map[# floor(bbox_left/64),floor(bbox_bottom/64)] = 1
            y = (y &amp;$ffffffc0) + 32;
        x = xx
    }
    else if y &lt; yprevious
    {
        x = xprevious
        if tile_map[# floor(bbox_right/64),floor(bbox_top/64)] = 1 or tile_map[# floor(bbox_left/64),floor(bbox_top/64)] = 1
            y = (y &amp;$ffffffc0) + 32;
        x = xx
    }
    if x = true_xx and y = yy
    {
        y = (y &amp;$ffffffc0) + 32;
        x = (x &amp;$ffffffc0) + 32;
    }
    speed = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mouse_check_button(mb_left) and point_distance(mouse_x,mouse_y,x,y) &gt; 4    
    move_towards_point(mouse_x,mouse_y,4)
else
    speed = 0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
//draw walls
for(var xx = 0; xx &lt; ds_grid_width(tile_map);xx++)
    for(var yy = 0; yy &lt; ds_grid_height(tile_map);yy++)
        if tile_map[# xx, yy]
            draw_rectangle(xx*64,yy*64,(xx+1)*64,(yy+1)*64,false)
//number based tile indiactor
/*
for(var xx = 0; xx &lt; ds_grid_width(tile_map);xx++)
    for(var yy = 0; yy &lt; ds_grid_height(tile_map);yy++)
        draw_text(xx*32,yy*32,tile_map[# xx, yy])
for(var xx = 0; xx &lt; room_width; xx+=32)
    draw_line_colour(xx,0,xx,room_height,c_red,c_red)
for(var yy = 0; yy &lt; room_height; yy+=32)
    draw_line_colour(0,yy,room_width,yy,c_red,c_red)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
